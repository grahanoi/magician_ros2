# Dockerfile for Raspberry Pi 4 (ARM64) - Robust approach
FROM osrf/ros:humble-ros-base

# Install system dependencies and Python build tools
RUN apt-get update && apt-get install -y \
    python3-pip \
    python3-dev \
    python3-venv \
    git \
    udev \
    build-essential \
    cmake \
    pkg-config \
    libffi-dev \
    libssl-dev \
    wget \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create the workspace
RUN mkdir -p /magician_ros2_control_system_ws/src

# Set working directory
WORKDIR /magician_ros2_control_system_ws

# Create and activate virtual environment
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Upgrade pip in virtual environment
RUN pip install --upgrade pip setuptools wheel

# Source ROS setup on every shell
RUN echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc

# Copy local repo into container
COPY . /magician_ros2_control_system_ws/src

# Install essential packages manually (skip problematic ones)
RUN pip install --no-cache-dir --timeout=1000 \
    numpy \
    pyserial \
    scipy \
    pyyaml \
    transforms3d

# Try to install other packages from requirements.txt, but continue on failure
RUN pip install --no-cache-dir --timeout=1000 -r src/requirements.txt || \
    echo "Some packages failed to install, continuing with essential packages only"

# Install additional ROS2 Python packages that might be needed
RUN pip install --no-cache-dir \
    rclpy || echo "rclpy already available" \
    && pip install --no-cache-dir std-msgs geometry-msgs sensor-msgs tf2-ros || \
    echo "Some ROS packages not available via pip"

# Install ROS packages via apt where possible
RUN apt-get update && apt-get install -y \
    python3-rclpy \
    python3-std-msgs \
    python3-geometry-msgs \
    python3-sensor-msgs \
    python3-tf2-ros \
    ros-humble-geometry-msgs \
    ros-humble-std-msgs \
    ros-humble-sensor-msgs \
    ros-humble-tf2-ros \
    && rm -rf /var/lib/apt/lists/*

# Install ROS dependencies
RUN apt-get update && \
    rosdep init || true && \
    rosdep update && \
    rosdep install --from-paths src --ignore-src -r -y && \
    rm -rf /var/lib/apt/lists/*

# Build the workspace
RUN /bin/bash -c "source /opt/ros/humble/setup.bash && colcon build" || \
    echo "Build completed with some warnings"

# Setup environment to use virtual environment
RUN echo "source /opt/venv/bin/activate" >> ~/.bashrc
RUN echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc
RUN echo "source /magician_ros2_control_system_ws/install/setup.bash" >> ~/.bashrc

# Add udev rules for USB devices (Dobot)
RUN echo 'SUBSYSTEM=="usb", ATTRS{idVendor}=="10c4", ATTRS{idProduct}=="ea60", MODE="0666"' > /etc/udev/rules.d/99-dobot.rules

# Activate virtual environment by default
ENV PATH="/opt/venv/bin:$PATH"

CMD ["/bin/bash"]